// <auto-generated />
using System;
using Halevi.Infra.DbConfig;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Halevi.Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("Halevi.Core.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.ToTable("CATEGORY");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e1e7e405-4690-42e8-8423-dd9ecd389bc7"),
                            Active = true,
                            Code = 1,
                            CreatedAt = new DateOnly(2023, 11, 13),
                            Name = "Categoria 1"
                        });
                });

            modelBuilder.Entity("Halevi.Core.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("InStock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Code");

                    b.ToTable("PRODUCT");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4679709-46fc-4fe4-92bc-b227354abaa7"),
                            Active = true,
                            CategoryId = new Guid("e1e7e405-4690-42e8-8423-dd9ecd389bc7"),
                            Code = 1,
                            CreatedAt = new DateOnly(2023, 11, 13),
                            Description = "É o Produto 1",
                            InStock = true,
                            Name = "Produto 1",
                            Price = 20.5
                        });
                });

            modelBuilder.Entity("Halevi.Core.Domain.Entities.ProductVariation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool[]>("Image")
                        .HasColumnType("BLOB");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("ProductId");

                    b.ToTable("PRODUCTVARIATION");

                    b.HasData(
                        new
                        {
                            Id = new Guid("48250a1e-4b9b-4360-be12-c41ec66219ea"),
                            Active = true,
                            Code = 1,
                            CreatedAt = new DateOnly(2023, 11, 13),
                            Name = "Variação do Produto 1",
                            ProductId = new Guid("a4679709-46fc-4fe4-92bc-b227354abaa7")
                        });
                });

            modelBuilder.Entity("Halevi.Core.Domain.Entities.Product", b =>
                {
                    b.HasOne("Halevi.Core.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Halevi.Core.Domain.Entities.ProductVariation", b =>
                {
                    b.HasOne("Halevi.Core.Domain.Entities.Product", "Product")
                        .WithMany("ProductVariations")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Halevi.Core.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Halevi.Core.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductVariations");
                });
#pragma warning restore 612, 618
        }
    }
}
